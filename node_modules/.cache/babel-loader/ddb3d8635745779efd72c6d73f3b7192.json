{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { database } from '../services/firebase';\nexport function useRoom(roomId) {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  const [title, setTitle] = useState('');\n  useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n    roomRef.on('value', room => {\n      const databaseRoom = room.val();\n      const firebaseQuestions = databaseRoom.questions;\n      const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\n        return {\n          id: key,\n          content: value.content,\n          author: value.author,\n          isHighlighted: value.isHighlighted,\n          isAnswered: value.isAnswered\n        };\n      });\n      setTitle(databaseRoom.title);\n      setQuestions(parsedQuestions);\n    });\n  }, [roomId]);\n  return {\n    questions,\n    title\n  };\n}\n\n_s(useRoom, \"en7WwbUlyVUkE+lFVapgearQsFw=\");","map":{"version":3,"sources":["C:/Users/vnn20/nlw-together/letmeask/src/hooks/useRoom.ts"],"names":["useEffect","useState","database","useRoom","roomId","questions","setQuestions","title","setTitle","roomRef","ref","on","room","databaseRoom","val","firebaseQuestions","parsedQuestions","Object","entries","map","key","value","id","content","author","isHighlighted","isAnswered"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AA0BA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAiC;AAAA;;AACtC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAiB,EAAjB,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,OAAO,GAAGP,QAAQ,CAACQ,GAAT,CAAc,SAAQN,MAAO,EAA7B,CAAhB;AAEAK,IAAAA,OAAO,CAACE,EAAR,CAAW,OAAX,EAAqBC,IAAD,IAAU;AAC5B,YAAMC,YAAY,GAAGD,IAAI,CAACE,GAAL,EAArB;AACA,YAAMC,iBAAoC,GAAGF,YAAY,CAACR,SAA1D;AAEA,YAAMW,eAAe,GAAGC,MAAM,CAACC,OAAP,CAAeH,iBAAf,EAAkCI,GAAlC,CACtB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AAChB,eAAO;AACLC,UAAAA,EAAE,EAAEF,GADC;AAELG,UAAAA,OAAO,EAAEF,KAAK,CAACE,OAFV;AAGLC,UAAAA,MAAM,EAAEH,KAAK,CAACG,MAHT;AAILC,UAAAA,aAAa,EAAEJ,KAAK,CAACI,aAJhB;AAKLC,UAAAA,UAAU,EAAEL,KAAK,CAACK;AALb,SAAP;AAOD,OATqB,CAAxB;AAYAlB,MAAAA,QAAQ,CAACK,YAAY,CAACN,KAAd,CAAR;AACAD,MAAAA,YAAY,CAACU,eAAD,CAAZ;AACD,KAlBD;AAmBD,GAtBQ,EAsBN,CAACZ,MAAD,CAtBM,CAAT;AAwBA,SAAO;AAAEC,IAAAA,SAAF;AAAaE,IAAAA;AAAb,GAAP;AACD;;GA7BeJ,O","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { database } from '../services/firebase';\r\n\r\ntype FirebaseQuestions = Record<\r\n  string,\r\n  {\r\n    author: {\r\n      name: string;\r\n      avatar: string;\r\n    };\r\n    content: string;\r\n    isAnswered: boolean;\r\n    isHighlighted: boolean;\r\n  }\r\n>;\r\n\r\ntype QuestionType = {\r\n  id: string;\r\n  author: {\r\n    name: string;\r\n    avatar: string;\r\n  };\r\n  content: string;\r\n  isAnswered: boolean;\r\n  isHighlighted: boolean;\r\n};\r\n\r\nexport function useRoom(roomId: string) {\r\n  const [questions, setQuestions] = useState<QuestionType[]>([]);\r\n  const [title, setTitle] = useState('');\r\n\r\n  useEffect(() => {\r\n    const roomRef = database.ref(`rooms/${roomId}`);\r\n\r\n    roomRef.on('value', (room) => {\r\n      const databaseRoom = room.val();\r\n      const firebaseQuestions: FirebaseQuestions = databaseRoom.questions;\r\n\r\n      const parsedQuestions = Object.entries(firebaseQuestions).map(\r\n        ([key, value]) => {\r\n          return {\r\n            id: key,\r\n            content: value.content,\r\n            author: value.author,\r\n            isHighlighted: value.isHighlighted,\r\n            isAnswered: value.isAnswered,\r\n          };\r\n        }\r\n      );\r\n\r\n      setTitle(databaseRoom.title);\r\n      setQuestions(parsedQuestions);\r\n    });\r\n  }, [roomId]);\r\n\r\n  return { questions, title };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}