{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vnn20\\\\nlw-together\\\\letmeask\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext, useEffect } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { NewRoom } from \"./pages/NewRoom\";\nimport { auth, firebase } from './services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState();\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        const {\n          displayName,\n          photoURL,\n          uid\n        } = user;\n\n        if (!displayName || !photoURL) {\n          throw new Error('Missing information from Google Account.');\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatar: photoURL\n        });\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  async function signInWithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const result = await auth.signInWithPopup(provider);\n\n    if (result.user) {\n      const {\n        displayName,\n        photoURL,\n        uid\n      } = result.user;\n\n      if (!displayName || !photoURL) {\n        throw new Error('Missing information from Google Account.');\n      }\n\n      setUser({\n        id: uid,\n        name: displayName,\n        avatar: photoURL\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        user,\n        signInWithGoogle\n      },\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/rooms/new\",\n        component: NewRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vnn20/nlw-together/letmeask/src/App.tsx"],"names":["useState","createContext","useEffect","BrowserRouter","Route","Home","NewRoom","auth","firebase","AuthContext","App","user","setUser","unsubscribe","onAuthStateChanged","displayName","photoURL","uid","Error","id","name","avatar","signInWithGoogle","provider","GoogleAuthProvider","result","signInWithPopup"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,qBAA/B;;AAaA,OAAO,MAAOC,WAAW,gBAAGR,aAAa,CAAC,EAAD,CAAlC;;AAEP,SAASS,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,EAAhC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,WAAW,GAAGN,IAAI,CAACO,kBAAL,CAAwBH,IAAI,IAAI;AAClD,UAAIA,IAAJ,EAAU;AACR,cAAM;AAAEI,UAAAA,WAAF;AAAeC,UAAAA,QAAf;AAAyBC,UAAAA;AAAzB,YAAiCN,IAAvC;;AAEA,YAAG,CAACI,WAAD,IAAgB,CAACC,QAApB,EAA8B;AAC5B,gBAAM,IAAIE,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAEDN,QAAAA,OAAO,CAAC;AACNO,UAAAA,EAAE,EAAEF,GADE;AAENG,UAAAA,IAAI,EAAEL,WAFA;AAGNM,UAAAA,MAAM,EAAEL;AAHF,SAAD,CAAP;AAKD;AACF,KAdmB,CAApB;AAgBA,WAAO,MAAM;AACXH,MAAAA,WAAW;AACZ,KAFD;AAID,GArBQ,EAqBN,EArBM,CAAT;;AAuBA,iBAAeS,gBAAf,GAAkC;AAChC,UAAMC,QAAQ,GAAG,IAAIf,QAAQ,CAACD,IAAT,CAAciB,kBAAlB,EAAjB;AAEA,UAAMC,MAAM,GAAG,MAAMlB,IAAI,CAACmB,eAAL,CAAqBH,QAArB,CAArB;;AAEA,QAAIE,MAAM,CAACd,IAAX,EAAiB;AACf,YAAM;AAAEI,QAAAA,WAAF;AAAeC,QAAAA,QAAf;AAAyBC,QAAAA;AAAzB,UAAiCQ,MAAM,CAACd,IAA9C;;AAEI,UAAG,CAACI,WAAD,IAAgB,CAACC,QAApB,EAA8B;AAC5B,cAAM,IAAIE,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAEDN,MAAAA,OAAO,CAAC;AACNO,QAAAA,EAAE,EAAEF,GADE;AAENG,QAAAA,IAAI,EAAEL,WAFA;AAGNM,QAAAA,MAAM,EAAEL;AAHF,OAAD,CAAP;AAKD;AACF;;AAGL,sBACE,QAAC,aAAD;AAAA,2BACI,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEL,QAAAA,IAAF;AAAQW,QAAAA;AAAR,OAA7B;AAAA,8BACF,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEjB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADE,eAEF,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,cAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAvDQI,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import { useState, createContext, useEffect } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport { Home } from './pages/Home';\r\nimport { NewRoom } from \"./pages/NewRoom\";\r\nimport { auth, firebase } from './services/firebase';\r\n\r\ntype User = {\r\n  id: string;\r\n  name: string;\r\n  avatar: string;\r\n}\r\n\r\ntype AuthContextType = {\r\n  user: User | undefined;\r\n  signInWithGoogle: () => Promise<void>;\r\n}\r\n\r\nexport const  AuthContext = createContext({} as AuthContextType);\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState<User>();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        const { displayName, photoURL, uid } = user\r\n\r\n        if(!displayName || !photoURL) {\r\n          throw new Error('Missing information from Google Account.');\r\n        }\r\n\r\n        setUser({\r\n          id: uid,\r\n          name: displayName,\r\n          avatar: photoURL\r\n        })\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    }\r\n\r\n  }, [])\r\n\r\n  async function signInWithGoogle() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    const result = await auth.signInWithPopup(provider);\r\n\r\n    if (result.user) {\r\n      const { displayName, photoURL, uid } = result.user\r\n\r\n          if(!displayName || !photoURL) {\r\n            throw new Error('Missing information from Google Account.');\r\n          }\r\n\r\n          setUser({\r\n            id: uid,\r\n            name: displayName,\r\n            avatar: photoURL\r\n          })\r\n        }\r\n      }\r\n\r\n\r\n  return (\r\n    <BrowserRouter>\r\n        <AuthContext.Provider value={{ user, signInWithGoogle }}>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/rooms/new\" component={NewRoom} />\r\n        </AuthContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}